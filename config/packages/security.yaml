security:
    role_hierarchy:
        ROLE_USER:  ROLE_USER
        ROLE_ADMIN: ROLE_ADMIN

        # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    encoders:
        App\Entity\Personne: plaintext
            #algorithm: bcrypt
            #cost : 12  # plus il est important, mieux ce sera crypté

    providers:
        from_database :
            entity:
                class: App\Entity\Personne
                property : mail

        #fos_userbundle:
            # id: fos_user.user_provider.username_email

        #my_ldap:            #Aura également besoin d'etre config dans service.yaml
            #ldap:
                #service: ldap
                #base_dn: dc=example,dc=com
                #search_dn: "cn=read-only-admin,dc=example,dc=com"
                #search_password: password
                #default_roles: ROLE_USER
                #uid_key: uid




    firewalls:
            dev:
                pattern: ^/(_(profiler|wdt)|css|images|js)/
                security: false
            main:
                pattern: ^/
                form_login:
                    #provider: fos_userbundle
                    csrf_token_generator: security.csrf.token_manager

                logout:
                    path : /logout
                    target : /  #Où est ce qu'on redirige apres logout

                anonymous:    true
                guard:
                    authenticators:
                        - App\Security\LoginFormAuthenticator

        # Easy way to control access for large sections of your site
        # Note: Only the *first* access control that matches will be used
    access_control:
            - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/admin/, role: ROLE_ADMIN }

